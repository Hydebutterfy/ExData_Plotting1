pt(2.13,df=27,lower.tail=FALSE)
(18.985+21.015)/2
qt(0.025,df=35)
pt(-1.75,df=24,lower.tail=FALSE)
pt(-1.75,df=24,lower.tail=TRUE)
qt(0.05,df=19)
pt(-0.81,df=19,lower.tail=TRUE)
pt(1.6,df=50,lower.tail=TRUE)
pt(-1.6,df=50,lower.tail=TRUE)
pchiq(15.08,6,lower.tail=FALSE)
pchisq(15.08,6,lower.tail=FALSE)
library(statsr)
library(dplyr)
library(ggplot2)
data(atheism)
atheism
View(atheism)
View(atheism)
atheism$nationality
us12 <- atheism %>%
filter(nationality == "United States" , atheism$year == "2012")
View(us12)
View(us12)
atheisnumbert<-factor(us12$response)
atheisnumbert
summary(atheisnumbert)
atheisnumbert¥nlevels
atheisnumbert（nlevels）
？nlevels
nlevel（atheisnumbert）
nlevels(atheisnumbert)
levels(atheisnumbert)
nlevel（atheisnumbert）
n<-summary(atheisnumbert)
n
n$atheist
n["atheist"]
n["atheist"]+n["non-atheist"]
china<-ath
china <- atheism %>%
filter(nationality == "China" , atheism$year == "2012")
View(china)
View(china)
View(atheism)
View(atheism)
filter(nationality == "Spain" , atheism$year == "2012")
spain <- atheism %>% filter(nationality == "Spain" , atheism$year == "2005"and"2012")
spain <- atheism %>% filter(nationality == "Spain" , atheism$year == "2005"and"2012")
spain <- atheism %>% filter(nationality == "Spain" , atheism$year == "2005"|"2012")
spain <- atheism %>% filter(nationality == "Spain")
View(spain)
View(spain)
inference?
?inference
View(spain)
spain2005 <- atheism %>%
filter(nationality == "Spain" , atheism$year == "2012")
summary(spain2005)
spain2005 <- atheism %>%
filter(atheism$nationality == "Spain" , atheism$year == "2012")
library(statsr)
library(dplyr)
library(ggplot2)
spain2005 <- atheism %>%
filter(atheism$nationality == "Spain" , atheism$year == "2012")
spain2012 <- atheism %>%
filter(atheism$nationality == "Spain" , atheism$year == "2012")
spain2005 <- atheism %>%
filter(atheism$nationality == "Spain" , atheism$year == "2005")
View(spain2005)
View(spain2005)
View(spain2012)
View(spain2012)
spain2012 <- atheism %>%
filter(atheism$nationality == "Spain" , atheism$year == "2012")
spain2005 <- atheism %>%
filter(atheism$nationality == "Spain" , atheism$year == "2005")
spain2005atheisnumbert<-factor(spain2005$response)
spain2005<-summary(atheisnumbert)
spain2005p<-spain2005["atheist"]/(spain2005["atheist"]+spain2005["non-atheist"])
spain2012atheisnumbert<-factor(spain2012$response)
spain2012<-summary(atheisnumbert)
spain2012p<-spain2012["atheist"]/(spain2012["atheist"]+spain2012["non-atheist"])
spain2012p
spain2005p
spain2012 <- atheism %>%
filter(atheism$nationality == "Spain" , atheism$year == "2012")
spain2005 <- atheism %>%
filter(atheism$nationality == "Spain" , atheism$year == "2005")
spain2005atheisnumbert<-factor(spain2005$response)
spain2005<-summary(spain2005atheisnumbert)
spain2005p<-spain2005["atheist"]/(spain2005["atheist"]+spain2005["non-atheist"])
spain2012atheisnumbert<-factor(spain2012$response)
spain2012<-summary(spain2012atheisnumbert)
spain2012p<-spain2012["atheist"]/(spain2012["atheist"]+spain2012["non-atheist"])
0.25/(0.01/1.96)**2
View(atheism)
View(atheism)
attcah(atheism)
attach(atheism)
plot(year,response)
hist(year,response)
attach(china)
hist(response)
hist(year)
dose<-c(20,30,40,45,60)
drugA<-c(16,20,27,40,60)
drugB<-c(15,18,25,31,40)
plot(dose,drugA,type="b")
help("polt)
help(polt)
help(pl0t)
help(plot)
opar<-par(no.readonly=TRUE)
par(lty=2,pch=17)
plot(dose,drugA,type="b")
par(opar)
plot(dose,drugA,type="b")
plot(dose,drugA,type="b")
n<-10
mycolors<-rainbow(n)
pie(rep(1,n),labels=mycolors,col=mycolors)
mygrays<-gray(0:n/n)
pie(rep(1,n),labels=mygrays,col=mygrays)
mean(1:5)
"hello world"
x<-"do you love me?"
x
help("mean")
?mean
?summary
??summary
apropos(4)
apropos("4")
demo(plot())
demo(plot
demo(plot)
example("plot")
example("plot")
demo()
install.git()
??git
x<-c(8:27)
x
x<-c(0:100)
sd(x)
demo(plotmath)
demo()
demo(plotmath)
median(1, 2, 3, 4, 5)
median(1:5)
ls
ls()
pet<-sample(c(a,b,c,d),1000,replace=TRUE)
pet<-sample(c("a","b","c","d"),1000,replace=TRUE)
head(pet,10)
summary(pet)
str(pet)
as.factor(pet)
summary(pet)
summary(as.factor(pet))
？vcd
library("vcd", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("read.table")
install.packages(c("BH", "cluster", "codetools", "colorspace", "curl", "DBI", "evaluate", "foreign", "ggplot2", "jsonlite", "knitr", "lattice", "Matrix", "mgcv", "mnormt", "openssl", "psych", "R6", "Rcpp", "reshape2", "rmarkdown", "scales", "shiny", "snow", "stringi", "stringr", "survival", "tibble", "XML", "yaml"))
install.packages(c("BH", "cluster", "codetools", "colorspace", "curl", "DBI", "evaluate", "foreign", "ggplot2", "jsonlite", "knitr", "lattice", "Matrix", "mgcv", "mnormt", "openssl", "psych", "R6", "Rcpp", "reshape2", "rmarkdown", "scales", "shiny", "snow", "stringi", "stringr", "survival", "tibble", "XML", "yaml"))
install.packages(c("BH", "cluster", "codetools", "colorspace", "curl", "DBI", "evaluate", "foreign", "ggplot2", "jsonlite", "knitr", "lattice", "Matrix", "mgcv", "mnormt", "openssl", "psych", "R6", "Rcpp", "reshape2", "rmarkdown", "scales", "shiny", "snow", "stringi", "stringr", "survival", "tibble", "XML", "yaml"))
install.packages(c("ggplot2", "XML"))
install.packages(c("ggplot2", "XML"))
source("https://bioconductor.org/biocLite.R")
biocLite("rhdf5")
source("https://bioconductor.org/biocLite.R")
biocLite("rhdf5")
source("https://bioconductor.org/biocLite.R")
biocLite("rhdf5")
source("https://bioconductor.org/biocLite.R")
biocLite("rhdf5")
source("https://bioconductor.org/biocLite.R")
biocLite("rhdf5")
source("https://bioconductor.org/biocLite.R")
biocLite("rhdf5")
source("https://bioconductor.org/biocLite.R")
biocLite("rhdf5")
source("https://bioconductor.org/biocLite.R")
biocLite("rhdf5")
source("https://bioconductor.org/biocLite.R")
biocLite("rhdf5")
source("https://bioconductor.org/biocLite.R")
biocLite("rhdf5")
source("https://bioconductor.org/biocLite.R")
biocLite("rhdf5")
install.packages(c("digest", "ggplot2", "git2r", "htmlTable", "jsonlite", "mgcv", "openssl", "psych", "RSQLite", "shiny", "survival", "tidyr"))
?lm
example(lm)
exapmle(abline)
example("abline")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("readr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
example("read.csv")
example(unique
)
example("cut")
install_from_swirl("Exploratory Data Analysis")
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
pollution$pm25
summary(pollution$pm25)
quantile(pollution$pm25)
ppm<-pollution$pm25
quantile(ppm)
boxplot(ppm,col="blue")
abline(h=12)
hist(ppm,col="green")
rug(ppm)
?rug
rug(low)
rug(high)
low
high
?hist
hist(ppm,col="green",break=100)
hist(ppm,col="green",breaks=100)
rug(ppm)
hist(ppm,col="green")
abline(12,lwd=2)
abline(v=12,lwd=2)
rug(v=median(ppm),col="magenta",lwd=4)
rug(v=median(ppm),col="magenta",lwd=4)
abline(v=median(ppm),col="magenta",lwd=4)
names(polution)
names(pollution)
reg<-pollution$region
reg<-table(pollution$region)
reg
barplot(reg,col = "wheat")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
？par
?par
example(par)
par(mfrow = c(2, 1), mar = c(4, 4, 2, 1))
hist(subset(pollution, region == "east")$pm25, col = "green")
east <- subset(pollution,region=="east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution,region="west")$pm25, col = "green")
hist(subset(pollution,region="west")$pm25, col == "green")
hist(subset(pollution,region=="west")$pm25, col="green")
?
l
with(pollution,plot(latitude, pm25))
View(pollution)
View(pollution)
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$pm25,pollution$pm25)
plot(pollution$pm25,pollution$latitude)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1, 2),mar = c(5, 4, 2, 1))
plot(subset(pollution,region=="west")$latitude, ppm)
west<-subset(pollution,region=="west")
with(west,plot(latitude,pm25,main="West")
)
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
?Devices
with(faithful,plot(eruptions,waiting))
title(main= "Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main= "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main= "Old Faithful Geyser data")
dev.copy(png,file="geyserplot.png")
dev.off
dev.off()
setwd("~/Rlanguage/Exploratory Data Analysis/ExData_Plotting1")
alldata<-read.table("household_power_consumption.txt",header=TRUE,sep=";",stringsAsFactors=FALSE,na.strings="?")
names(alldata)
alldata<-read.table("household_power_consumption.txt",header=TRUE,sep=";",stringsAsFactors=FALSE,na.strings="?")
alldata<-read.table("household_power_consumption.txt",header=TRUE,sep=";",stringsAsFactors=FALSE,na.strings="?")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
selecteddata<-filter(alldata,Date=="1/2/2007"|Date=="2/2/2007")
selecteddata$DateTime<- with(selecteddata,strptime(paste(Date, Time), "%d/%m/%Y %H:%M:%S"))
png(filename = 'figure/plot3.png', width = 480, height = 480)
Sys.setlocale("LC_TIME", "en_US.UTF-8")
View(selecteddata)
plot(selecteddata$Global_active_power,selecteddata$DateTime)
hist(selecteddata$Global_reactive_power)
as<-c(1,2,3,4,4,3,2,2,2,3,3,2,3,3,3,3,2)
hist(as)
?par
install.packages(c("backports", "chron", "nlme", "Rcpp", "rprojroot"))
install.packages("nlme")
library("swirl")
swirl()
head(airquality)
hist(airquality$Ozone)
hist(selecteddata$Global_active_power)
png(filename = 'figure/plot3.png', width = 480, height = 480)
exit
sd
info()
main()
png(filename = 'figure/plot3.png', width = 480, height = 480)
Sys.setlocale("LC_TIME", "en_US.UTF-8")
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",ylab = "Energy sub metering"))
View(selecteddata)
dev.off()
png(filename = 'figure/plot3.png', width = 480, height = 480)
Sys.setlocale("LC_TIME", "en_US.UTF-8")
with(selecteddata, plot(DateTime,Global_active_power,type = "l",xlab = '',ylab = 'Global Active Power (kilowatts)'))
dev.off()
png(filename = 'figure/plot3.png', width = 480, height = 480)
Sys.setlocale("LC_TIME", "en_US.UTF-8")
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",ylab = "Energy sub metering"))
dev.off()
png(filename = 'figure/plot3.png', width = 480, height = 480)
Sys.setlocale("LC_TIME", "en_US.UTF-8")
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",xlab="",ylab = "Energy sub metering"))
png(filename = 'figure/plot3.png', width = 480, height = 480)
Sys.setlocale("LC_TIME", "en_US.UTF-8")
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",xlab="",ylab = "Energy sub metering"))
with(selecteddata, plot(DateTime,Sub_metering_2,type = "l",col="red"))
with(selecteddata, plot(DateTime,Sub_metering_2,type = "l",col="blue"))
dev.off()
png(filename = 'figure/plot3.png', width = 480, height = 480)
Sys.setlocale("LC_TIME", "en_US.UTF-8")
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",xlab="",ylab = "Energy sub metering"))
line(selecteddata, plot(DateTime,Sub_metering_2,type = "l",col="red"))
line(selecteddata, plot(DateTime,Sub_metering_2,type = "l",col="blue"))
dev.off()
png(filename = 'figure/plot3.png', width = 480, height = 480)
Sys.setlocale("LC_TIME", "en_US.UTF-8")
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",ylab = "Energy sub metering"))
line(selecteddata, plot(DateTime,Sub_metering_2,type = "l",col="red"))
line(selecteddata, plot(DateTime,Sub_metering_2,type = "l",col="blue"))
line(selecteddata, plot(DateTime,Sub_metering_2,type = "l",col="red"))
line(selecteddata, plot(DateTime,Sub_metering_3,type = "l",col="blue"))
png(filename = 'figure/plot3.png', width = 480, height = 480)
Sys.setlocale("LC_TIME", "en_US.UTF-8")
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",xlab="",ylab = "Energy sub metering"))
with(selecteddata, line(DateTime,Sub_metering_2,type = "l",col="red"))
with(selecteddata, line(DateTime,Sub_metering_3,type = "l",col="blue"))
dev.off()
png(filename = 'figure/plot3.png', width = 480, height = 480)
Sys.setlocale("LC_TIME", "en_US.UTF-8")
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",xlab="",ylab = "Energy sub metering"))
with(selecteddata, line(DateTime,Sub_metering_2,col="red"))
with(selecteddata, line(DateTime,Sub_metering_3,col="blue"))
dev.off()
png(filename = 'figure/plot3.png', width = 480, height = 480)
Sys.setlocale("LC_TIME", "en_US.UTF-8")
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",xlab="",ylab = "Energy sub metering"))
with(selecteddata, lines(DateTime,Sub_metering_2,col="red"))
with(selecteddata, lines(DateTime,Sub_metering_3,col="blue"))
dev.off()
?pch
png(filename = 'figure/plot3.png', width = 480, height = 480)
Sys.setlocale("LC_TIME", "en_US.UTF-8")
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",xlab="",ylab = "Energy sub metering"))
with(selecteddata, lines(DateTime,Sub_metering_2,col="red"))
with(selecteddata, lines(DateTime,Sub_metering_3,col="blue"))
legend("topright", col=c("black","blue","red"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"))
dev.off()
?legend
png(filename = 'figure/plot3.png', width = 480, height = 480)
Sys.setlocale("LC_TIME", "en_US.UTF-8")
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",xlab="",ylab = "Energy sub metering"))
with(selecteddata, lines(DateTime,Sub_metering_2,col="red"))
with(selecteddata, lines(DateTime,Sub_metering_3,col="blue"))
legend("topright", col=c("black","blue","red"), lwd=4,legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"))
dev.off()
png(filename = 'figure/plot3.png', width = 480, height = 480)
Sys.setlocale("LC_TIME", "en_US.UTF-8")
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",xlab="",ylab = "Energy sub metering"))
with(selecteddata, lines(DateTime,Sub_metering_2,col="red"))
with(selecteddata, lines(DateTime,Sub_metering_3,col="blue"))
legend("topright", col=c("black","blue","red"), lwd=2,legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"))
dev.off()
png(filename = 'figure/plot3.png', width = 480, height = 480)
Sys.setlocale("LC_TIME", "en_US.UTF-8")
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",xlab="",ylab = "Energy sub metering"))
with(selecteddata, lines(DateTime,Sub_metering_2,col="red"))
with(selecteddata, lines(DateTime,Sub_metering_3,col="blue"))
legend("topright", col=c("black","blue","red"), lwd=1,legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"))
dev.off()
png(filename = 'figure/plot3.png', width = 480, height = 480)
Sys.setlocale("LC_TIME", "en_US.UTF-8")
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",xlab="",ylab = "Energy sub metering"))
with(selecteddata, lines(DateTime,Sub_metering_2,col="red"))
with(selecteddata, lines(DateTime,Sub_metering_3,col="blue"))
legend("topright", col=c("black","red","blue"), lwd=1,legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"))
dev.off()
par(mfrow = c(2, 2))
png(filename = 'figure/plot4.png', width = 480, height = 480)
Sys.setlocale("LC_TIME", "en_US.UTF-8")
with(selecteddata, plot(DateTime,Global_active_power,type = "l",xlab = '',ylab = 'Global Active Power (kilowatts)'))
dev.off()
png(filename = 'figure/plot4.png', width = 480, height = 480)
Sys.setlocale("LC_TIME", "en_US.UTF-8")
with(selecteddata, plot(DateTime,Global_active_power,type = "l",xlab = '',ylab = 'Global Active Power (kilowatts)'))
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",xlab="",ylab = "Energy sub metering"))
with(selecteddata, lines(DateTime,Sub_metering_2,col="red"))
with(selecteddata, lines(DateTime,Sub_metering_3,col="blue"))
legend("topright", col=c("black","red","blue"), lwd=1,legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"))
dev.off()
png(filename = 'figure/plot4.png', width = 480, height = 480)
with(selecteddata, plot(DateTime,Global_active_power,type = "l",xlab = '',ylab = 'Global Active Power (kilowatts)'))
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",xlab="",ylab = "Energy sub metering"))
with(selecteddata, lines(DateTime,Sub_metering_2,col="red"))
with(selecteddata, lines(DateTime,Sub_metering_3,col="blue"))
legend("topright", col=c("black","red","blue"), lwd=1,legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"))
dev.off()
par(mfrow = c(2, 2))
png(filename = 'figure/plot4.png', width = 480, height = 480)
with(selecteddata, plot(DateTime,Global_active_power,type = "l",xlab = '',ylab = 'Global Active Power (kilowatts)'))
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",xlab="",ylab = "Energy sub metering"))
dev.off()
png(filename = 'figure/plot4.png', width = 480, height = 480)
par(mfrow = c(2, 2))
with(selecteddata, plot(DateTime,Global_active_power,type = "l",xlab = '',ylab = 'Global Active Power (kilowatts)'))
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",xlab="",ylab = "Energy sub metering"))
dev.off
dev.off()
png(filename = 'figure/plot4.png', width = 480, height = 480)
par(mfrow = c(2, 2))
with(selecteddata, plot(DateTime,Global_active_power,type = "l",xlab = '',ylab = 'Global Active Power (kilowatts)'))
with(selecteddata, plot(DateTime,Voltage,type = "l",ylab = 'Voltage'))
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",xlab="",ylab = "Energy sub metering"))
with(selecteddata, lines(DateTime,Sub_metering_2,col="red"))
with(selecteddata, lines(DateTime,Sub_metering_3,col="blue"))
legend("topright", col=c("black","red","blue"), lwd=1,legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"))
dev.off()
?legend
example("legend")
png(filename = 'figure/plot4.png', width = 480, height = 480)
Sys.setlocale("LC_TIME", "en_US.UTF-8")
par(mfrow = c(2, 2))
with(selecteddata, plot(DateTime,Global_active_power,type = "l",xlab = '',ylab = 'Global Active Power'))
with(selecteddata, plot(DateTime,Voltage,type = "l",xlab="datetime",ylab = 'Voltage'))
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",xlab="",ylab = "Energy sub metering"))
with(selecteddata, lines(DateTime,Sub_metering_2,col="red"))
with(selecteddata, lines(DateTime,Sub_metering_3,col="blue"))
legend("topright", col=c("black","red","blue"), lwd=1,legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"),box.lwd=0)
dev.off()
png(filename = 'figure/plot4.png', width = 480, height = 480)
Sys.setlocale("LC_TIME", "en_US.UTF-8")
par(mfrow = c(2, 2))
with(selecteddata, plot(DateTime,Global_active_power,type = "l",xlab = '',ylab = 'Global Active Power'))
with(selecteddata, plot(DateTime,Voltage,type = "l",xlab="datetime",ylab = 'Voltage'))
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",xlab="",ylab = "Energy sub metering"))
with(selecteddata, lines(DateTime,Sub_metering_2,col="red"))
with(selecteddata, lines(DateTime,Sub_metering_3,col="blue"))
legend("topright", col=c("black","red","blue"), lwd=1,legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"),box.col="transparence")
dev.off()
？legend()
？legend
?legend
png(filename = 'figure/plot4.png', width = 480, height = 480)
Sys.setlocale("LC_TIME", "en_US.UTF-8")
par(mfrow = c(2, 2))
with(selecteddata, plot(DateTime,Global_active_power,type = "l",xlab = '',ylab = 'Global Active Power'))
with(selecteddata, plot(DateTime,Voltage,type = "l",xlab="datetime",ylab = 'Voltage'))
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",xlab="",ylab = "Energy sub metering"))
with(selecteddata, lines(DateTime,Sub_metering_2,col="red"))
with(selecteddata, lines(DateTime,Sub_metering_3,col="blue"))
legend("topright", col=c("black","red","blue"), lwd=1,legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"),bty="n")
dev.off()
png(filename = 'figure/plot4.png', width = 480, height = 480)
Sys.setlocale("LC_TIME", "en_US.UTF-8")
par(mfrow = c(2, 2))
with(selecteddata, plot(DateTime,Global_active_power,type = "l",xlab = '',ylab = 'Global Active Power'))
with(selecteddata, plot(DateTime,Voltage,type = "l",xlab="datetime",ylab = 'Voltage'))
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",xlab="",ylab = "Energy sub metering"))
with(selecteddata, lines(DateTime,Sub_metering_2,col="red"))
with(selecteddata, lines(DateTime,Sub_metering_3,col="blue"))
legend("topright", col=c("black","red","blue"), lwd=1,legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"),box.col="trans")
with(selecteddata, plot(DateTime,Global_reactive_power,type="l",xlab="datetime",ylab ="Global_reactive_power"))
dev.off()
png(filename = 'figure/plot4.png', width = 480, height = 480)
Sys.setlocale("LC_TIME", "en_US.UTF-8")
par(mfrow = c(2, 2))
with(selecteddata, plot(DateTime,Global_active_power,type = "l",xlab = '',ylab = 'Global Active Power'))
with(selecteddata, plot(DateTime,Voltage,type = "l",xlab="datetime",ylab = 'Voltage'))
with(selecteddata, plot(DateTime,Sub_metering_1,type = "l",xlab="",ylab = "Energy sub metering"))
with(selecteddata, lines(DateTime,Sub_metering_2,col="red"))
with(selecteddata, lines(DateTime,Sub_metering_3,col="blue"))
legend("topright", col=c("black","red","blue"), lwd=1,legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"),bty="n")
with(selecteddata, plot(DateTime,Global_reactive_power,type="l",xlab="datetime",ylab ="Global_reactive_power"))
dev.off()
swirl()
?pch
?plot
swirl()
head(airquality)
xyplot(Ozone~Wind,airquality)
xyplot(Ozone~Wind,airquality,col="red",pch="8",main="Big Apple Data")
dev.odd
dev.off
xyplot(Ozone~Wind,airquality,col="red",pch="8",main="Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone ~ Wind| as.factor(Month), data = airquality)
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout=c(5,1))
